{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport userService from \"../services/userService\";\nconst initialState = {\n  user: {},\n  userGames: {},\n  error: false,\n  success: false,\n  loading: false,\n  message: null\n};\n\n//Get user details for edititting\nexport const profile = createAsyncThunk(\"user/profile\", async (user, thunkAPI) => {\n  const token = thunkAPI.getState().auth.user.token;\n  const data = await userService.profile(user, token);\n  return data;\n});\n\n//Update user details\nexport const updateProfile = createAsyncThunk(\"user/update\", async (user, thunkAPI) => {\n  const token = thunkAPI.getState().auth.user.token;\n  console.log(\"userSlice data: \", user);\n  const data = await userService.updateProfile(user, token);\n  if (data.errors) {\n    return thunkAPI.rejectWithValue(data.errors[0]);\n  }\n  return data;\n});\n\n//Update or define a user game details\nexport const updateUserGame = createAsyncThunk(\"user/updateGame\", async (game, thunkAPI) => {\n  const token = thunkAPI.getState().auth.user.token;\n  console.log(\"userSlice data: \", game);\n  const data = await userService.updateUserGame(game, token);\n  if (data.errors) {\n    return thunkAPI.rejectWithValue(data.errors[0]);\n  }\n  return data;\n});\n\n//Get user details\nexport const getUserDetails = createAsyncThunk(\"user/get\", async (id, thunkAPI) => {\n  const token = thunkAPI.getState().auth.user.token;\n  const data = await userService.getUserDetails(id, token);\n  return data;\n});\n\n//Get user games\nexport const getUserGames = createAsyncThunk(\"user/getGames\", async (id, thunkAPI) => {\n  const token = thunkAPI.getState().auth.user.token;\n  const data = await userService.getUserGames(id, token);\n  return data;\n});\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    resetMessage: state => {\n      state.message = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(profile.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(profile.fulfilled, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.error = null;\n      state.user = action.payload;\n    }).addCase(updateProfile.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(updateProfile.fulfilled, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.error = null;\n      state.user = action.payload;\n      state.message = \"Dados atualizados com sucesso!\";\n    }).addCase(updateProfile.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.user = {};\n    }).addCase(updateUserGame.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(updateUserGame.fulfilled, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.error = null;\n      state.userGames = action.payload; //Deve ser implementado para que o payload traga todos os games, não somente o game atualizado\n      state.message = \"Dados atualizados com sucesso!\";\n    }).addCase(updateUserGame.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(getUserDetails.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(getUserDetails.fulfilled, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.error = null;\n      state.user = action.payload;\n    }).addCase(getUserGames.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(getUserGames.fulfilled, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.error = null;\n      state.userGames = action.payload;\n    });\n  }\n});\nexport const {\n  resetMessage\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","userService","initialState","user","userGames","error","success","loading","message","profile","thunkAPI","token","getState","auth","data","updateProfile","console","log","errors","rejectWithValue","updateUserGame","game","getUserDetails","id","getUserGames","userSlice","name","reducers","resetMessage","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/empan/Desktop/CONTEUDO_DA_FACUL/Trabalho de conclusão de curso/TCC/frontend/src/slices/userSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport userService from \"../services/userService\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  userGames: {},\r\n  error: false,\r\n  success: false,\r\n  loading: false,\r\n  message: null,\r\n};\r\n\r\n//Get user details for edititting\r\nexport const profile = createAsyncThunk(\r\n  \"user/profile\",\r\n  async (user, thunkAPI) => {\r\n    const token = thunkAPI.getState().auth.user.token;\r\n\r\n    const data = await userService.profile(user, token);\r\n\r\n    return data;\r\n  }\r\n);\r\n\r\n//Update user details\r\nexport const updateProfile = createAsyncThunk(\r\n  \"user/update\",\r\n  async (user, thunkAPI) => {\r\n    const token = thunkAPI.getState().auth.user.token;\r\n    \r\n    console.log(\"userSlice data: \", user);\r\n    const data = await userService.updateProfile(user, token);\r\n\r\n\r\n    if (data.errors) {\r\n      return thunkAPI.rejectWithValue(data.errors[0]);\r\n    }\r\n\r\n    return data;\r\n  }\r\n);\r\n\r\n//Update or define a user game details\r\nexport const updateUserGame = createAsyncThunk(\r\n  \"user/updateGame\",\r\n  async (game, thunkAPI) => {\r\n    const token = thunkAPI.getState().auth.user.token;\r\n\r\n    console.log(\"userSlice data: \", game);\r\n    const data = await userService.updateUserGame(game, token);\r\n\r\n    if (data.errors) {\r\n      return thunkAPI.rejectWithValue(data.errors[0]);\r\n    }\r\n\r\n    return data;\r\n  }\r\n);\r\n\r\n//Get user details\r\nexport const getUserDetails = createAsyncThunk(\r\n  \"user/get\",\r\n  async (id, thunkAPI) => {\r\n    const token = thunkAPI.getState().auth.user.token;\r\n\r\n    const data = await userService.getUserDetails(id, token);\r\n\r\n    return data;\r\n  }\r\n);\r\n\r\n//Get user games\r\nexport const getUserGames = createAsyncThunk(\r\n  \"user/getGames\",\r\n  async (id, thunkAPI) => {\r\n    const token = thunkAPI.getState().auth.user.token;\r\n\r\n    const data = await userService.getUserGames(id, token);\r\n\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    resetMessage: (state) => {\r\n      state.message = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(profile.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(profile.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.success = true;\r\n        state.error = null;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(updateProfile.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(updateProfile.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.success = true;\r\n        state.error = null;\r\n        state.user = action.payload;\r\n        state.message = \"Dados atualizados com sucesso!\";\r\n      })\r\n      .addCase(updateProfile.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n        state.user = {};\r\n      })\r\n      .addCase(updateUserGame.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(updateUserGame.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.success = true;\r\n        state.error = null;\r\n        state.userGames = action.payload; //Deve ser implementado para que o payload traga todos os games, não somente o game atualizado\r\n        state.message = \"Dados atualizados com sucesso!\";\r\n      })\r\n      .addCase(updateUserGame.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(getUserDetails.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(getUserDetails.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.success = true;\r\n        state.error = null;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(getUserGames.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(getUserGames.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.success = true;\r\n        state.error = null;\r\n        state.userGames = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { resetMessage } = userSlice.actions;\r\nexport default userSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}