{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\empan\\\\Desktop\\\\CONTEUDO_DA_FACUL\\\\Trabalho de conclus\\xE3o de curso\\\\TCC\\\\frontend\\\\src\\\\pages\\\\Game\\\\GameRegister.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './GameRegister.css';\n\n//Hooks\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\n//Redux\nimport { getUserGames, resetMessage, updateProfile } from '../../slices/userSlice';\nimport { getGames } from '../../slices/gameSlice';\n\n//Components\nimport Message from '../../components/Message';\n\n//Router\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameRegister = () => {\n  _s();\n  //Get the game id from the url (eft, lol, dayz)\n  const {\n    game\n  } = useParams();\n  const dispatch = useDispatch();\n\n  //Get the current user games and his games infos\n  const {\n    userGames,\n    loading,\n    error,\n    message\n  } = useSelector(state => state.user);\n  //Get the list of games of the website\n  const {\n    games\n  } = useSelector(state => state.game);\n\n  //The current user's current game info\n  const [userGameInfo, setUserGameInfo] = useState(null);\n  //The current game fields to register or update\n  const [gameFields, setGameFields] = useState(null);\n  //The current game name (Escape From Tarkov, League of Legends, DayZ)\n  const [gameName, setGameName] = useState(\"\");\n\n  //The objectified formData, that will be turned into a real FormData to be sent to register/update\n  const [formData, setFormData] = useState({});\n\n  //Load user data for the game\n  useEffect(() => {\n    dispatch(getUserGames());\n    dispatch(getGames());\n  }, [dispatch]);\n  useEffect(() => {\n    if (games && game) {\n      if (games[game] && games[game].name) setGameName(games[game].name);\n    }\n  }, [games, game]);\n\n  //Fill userGames with the game from his list of games\n  useEffect(() => {\n    if (userGames && game) {\n      const userGameInfo = userGames[game];\n      if (userGameInfo) {\n        setUserGameInfo(userGameInfo);\n      }\n    }\n  }, [userGames, game]);\n\n  //Fill user game info to edit (if exists), and fill the gameInfo needed to create the form and register\n  useEffect(() => {\n    const gameInfo = userGames[game];\n    if (gameInfo) {\n      setUserGameInfo(gameInfo);\n    }\n    if (games) {\n      const fields = games[game];\n      if (fields && fields.userInfo) {\n        const userInfo = fields.userInfo;\n        setGameFields(userInfo);\n      }\n    }\n    console.log(\"Game: \", game);\n    console.log(\"userGames: \", userGames);\n    console.log(\"games: \", games);\n    console.log(\"userGameInfo: \", userGameInfo);\n    console.log(\"gameFields: \", gameFields);\n  }, [games]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n    console.log(formData);\n  };\n  const handleNumberChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (!isNaN(value) && parseFloat(value) >= 0) setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleTextChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n    console.log(formData);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const userFormData = Object.keys(userGameInfo).forEach(key => formData.append(key, userGameInfo[key]));\n    formData.append(\"user\", userFormData);\n    await dispatch(updateProfile(formData));\n    setTimeout(() => {\n      dispatch(resetMessage());\n    }, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"edit-profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Perfil de jogo: \", gameName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"subtitle\",\n      children: \"Informe ou altere os dados de sua conta de jogo.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [gameFields && Object.entries(gameFields).map((_ref, key) => {\n        let [fieldName, field] = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: fieldName,\n            children: [fieldName, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), field === 'Integer' ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: fieldName,\n            name: fieldName,\n            value: formData[fieldName] || '',\n            onChange: handleNumberChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this) : field === 'String' ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: fieldName,\n            name: fieldName,\n            value: formData[fieldName] || '',\n            onChange: handleTextChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this) : typeof field == typeof [] ? /*#__PURE__*/_jsxDEV(\"select\", {\n            id: fieldName,\n            name: fieldName,\n            value: formData[fieldName] || '',\n            onChange: handleChange,\n            children: Object.values(field).map(value => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: value,\n              children: value\n            }, value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Unsupported field type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this);\n      }), !loading && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Salvar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 22\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        disabled: true,\n        value: \"Aguarde...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        msg: error,\n        type: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 19\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        msg: message,\n        type: \"success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(GameRegister, \"nr5zGO72oJJOPhk8ifwJgE4NhVM=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector];\n});\n_c = GameRegister;\nexport default GameRegister;\nvar _c;\n$RefreshReg$(_c, \"GameRegister\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","getUserGames","resetMessage","updateProfile","getGames","Message","useParams","jsxDEV","_jsxDEV","GameRegister","_s","game","dispatch","userGames","loading","error","message","state","user","games","userGameInfo","setUserGameInfo","gameFields","setGameFields","gameName","setGameName","formData","setFormData","name","gameInfo","fields","userInfo","console","log","handleChange","e","value","target","handleNumberChange","isNaN","parseFloat","handleTextChange","handleSubmit","preventDefault","userFormData","Object","keys","forEach","key","append","setTimeout","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","entries","map","_ref","fieldName","field","htmlFor","type","onChange","values","disabled","msg","_c","$RefreshReg$"],"sources":["C:/Users/empan/Desktop/CONTEUDO_DA_FACUL/Trabalho de conclusÃ£o de curso/TCC/frontend/src/pages/Game/GameRegister.js"],"sourcesContent":["import React from 'react';\r\nimport './GameRegister.css';\r\n\r\n//Hooks\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n//Redux\r\nimport { getUserGames, resetMessage, updateProfile } from '../../slices/userSlice'\r\nimport { getGames } from '../../slices/gameSlice';\r\n\r\n//Components\r\nimport Message from '../../components/Message'\r\n\r\n//Router\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst GameRegister = () => {\r\n  //Get the game id from the url (eft, lol, dayz)\r\n  const { game } = useParams();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  //Get the current user games and his games infos\r\n  const { userGames, loading, error, message } = useSelector((state) => state.user);\r\n  //Get the list of games of the website\r\n  const { games } = useSelector((state) => state.game);\r\n\r\n  //The current user's current game info\r\n  const [userGameInfo, setUserGameInfo] = useState(null);\r\n  //The current game fields to register or update\r\n  const [gameFields, setGameFields] = useState(null);\r\n  //The current game name (Escape From Tarkov, League of Legends, DayZ)\r\n  const [gameName, setGameName] = useState(\"\");\r\n\r\n  //The objectified formData, that will be turned into a real FormData to be sent to register/update\r\n  const [formData, setFormData] = useState({});\r\n\r\n  //Load user data for the game\r\n  useEffect(() => {\r\n    dispatch(getUserGames())\r\n    dispatch(getGames())\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if(games && game) {\r\n      if(games[game] && games[game].name)\r\n      setGameName(games[game].name);\r\n    }\r\n  }, [games, game]);\r\n\r\n  //Fill userGames with the game from his list of games\r\n  useEffect(() => {\r\n    if(userGames && game) {\r\n      const userGameInfo = userGames[game];\r\n      if(userGameInfo) {\r\n        setUserGameInfo(userGameInfo);\r\n      }\r\n    }\r\n  }, [userGames, game]);\r\n\r\n  //Fill user game info to edit (if exists), and fill the gameInfo needed to create the form and register\r\n  useEffect(() => {\r\n    const gameInfo = userGames[game];\r\n    if(gameInfo) {\r\n      setUserGameInfo(gameInfo);\r\n    }\r\n    if(games) {\r\n      const fields = games[game];\r\n      if(fields && fields.userInfo) {\r\n        const userInfo = fields.userInfo;\r\n        setGameFields(userInfo)\r\n      }\r\n    }\r\n    console.log(\"Game: \", game);\r\n    console.log(\"userGames: \", userGames);\r\n    console.log(\"games: \", games);\r\n    console.log(\"userGameInfo: \", userGameInfo);\r\n    console.log(\"gameFields: \", gameFields);\r\n  }, [games]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n    console.log(formData)\r\n  };\r\n\r\n  const handleNumberChange = (e) => {\r\n    const { name, value } = e.target;\r\n  \r\n    if (!isNaN(value) && parseFloat(value) >= 0)\r\n      setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleTextChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n    console.log(formData)\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const userFormData = Object.keys(userGameInfo).forEach((key) =>\r\n      formData.append(key, userGameInfo[key])\r\n    );\r\n\r\n    formData.append(\"user\", userFormData);\r\n\r\n    await dispatch(updateProfile(formData));\r\n\r\n    setTimeout(() => {\r\n      dispatch(resetMessage());\r\n    }, 2000)\r\n  }\r\n\r\n  return (\r\n    <div id='edit-profile'>\r\n      <h2>Perfil de jogo: {gameName}</h2>\r\n      <p className='subtitle'>Informe ou altere os dados de sua conta de jogo.</p>\r\n      <form onSubmit={handleSubmit}>\r\n        {gameFields && Object.entries(gameFields).map(([fieldName, field], key) => (\r\n          <div key={key}>\r\n            <label htmlFor={fieldName}>{fieldName}:</label>\r\n            {field === 'Integer' ? (\r\n              <input\r\n                type=\"number\"\r\n                id={fieldName}\r\n                name={fieldName}\r\n                value={formData[fieldName] || ''}\r\n                onChange={handleNumberChange}\r\n              />\r\n            ) : field === 'String' ? (\r\n              <input\r\n                type=\"text\"\r\n                id={fieldName}\r\n                name={fieldName}\r\n                value={formData[fieldName] || ''}\r\n                onChange={handleTextChange}\r\n              />\r\n            ) : typeof field == typeof [] ? (\r\n              <select\r\n                id={fieldName}\r\n                name={fieldName}\r\n                value={formData[fieldName] || ''}\r\n                onChange={handleChange}\r\n              >\r\n                {Object.values(field).map((value) => (\r\n                  <option key={value} value={value}>\r\n                    {value}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            ) : (\r\n              <p>Unsupported field type</p>\r\n            )}\r\n          </div>\r\n        ))}\r\n        {!loading && <input type=\"submit\" value=\"Salvar\" />}\r\n        {loading && <input type=\"submit\" disabled value=\"Aguarde...\" />}\r\n        {error && <Message msg={error} type=\"error\" />}\r\n        {message && <Message msg={message} type=\"success\" />}\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GameRegister;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}