{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\empan\\\\Desktop\\\\CONTEUDO_DA_FACUL\\\\Trabalho de conclus\\xE3o de curso\\\\Mate.gg\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './Chat.css';\n\n//Chat server\nimport io from 'socket.io-client';\n\n//Uploads\nimport { uploads } from '../utils/config';\n\n//Icons\nimport { BsX, BsChatDots } from 'react-icons/bs';\n\n//Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { profile } from '../slices/userSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.user);\n  const chatMessagesRef = useRef(null);\n  const [socket, setSocket] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [unreadMessagesCount, setUnreadMessagesCount] = useState(1);\n  const [chatMessages, setChatMessages] = useState({});\n  const [messageId, setMessageId] = useState(null);\n  const [newMessage, setNewMessage] = useState(null);\n  const [userId, setUserId] = useState(null);\n  useEffect(() => {\n    profile();\n  }, [dispatch]);\n\n  //Create and set the socket variable, and sets the disconnection from socket when the component is dismounted\n  useEffect(() => {\n    const newSocket = io('http://localhost:4000', {\n      withCredentials: true\n    });\n    setSocket(newSocket);\n    return () => {\n      //Disconnect from server when Chat.js is dismounted\n      if (socket) {\n        socket.disconnect();\n      }\n    };\n  }, []);\n\n  //Set the userId variable when the store returns the user object\n  useEffect(() => {\n    if (user) {\n      setUserId(user.id);\n    }\n  }, [user]);\n\n  //Joins the client in the server when the socket and the userId are ready\n  useEffect(() => {\n    if (userId && socket) {\n      socket.emit('join', userId);\n    }\n  }, [userId, socket]);\n\n  //Emits the command to search for messages and sets the manipulator to when messages are received\n  useEffect(() => {\n    if (userId && socket) {\n      socket.emit('get-messages');\n      socket.on('messages', messages => {\n        setChatMessages(messages);\n      });\n    }\n    return () => {\n      //Sets the manipulator off when the component gets dismounted\n      if (socket) {\n        socket.off('messages');\n      }\n    };\n  }, [userId, socket]);\n\n  //Toggle open/close chat\n  const toggleChat = () => {\n    setIsOpen(!isOpen);\n  };\n\n  //Scrolls the chat till the end when it opens\n  useEffect(() => {\n    if (isOpen) {\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n    }\n  }, [isOpen]);\n  useEffect(() => {\n    setMessageId('-NfHe4i_uod67B0toAgQ');\n    console.log(\"Mensagens: \", chatMessages);\n    console.log(\"Mensagem : \", chatMessages[messageId]);\n  }, [chatMessages]);\n\n  //Handles a message submit from the message input\n  const handleMessageChange = e => {\n    setNewMessage(e.target.value);\n  };\n\n  //Handles a message submit from the message input\n  const handleMessageSubmit = e => {\n    if (socket && userId) {\n      const userSend = userId;\n      const targetUser = \"-NfHe4i_uod67B0toAgQ\";\n      socket.emit('send-message', {\n        message: newMessage,\n        targetUser: targetUser\n      });\n      setNewMessage(null);\n    }\n  };\n  const getDateFromMilliseconds = stringMilliseconds => {\n    const milliseconds = parseInt(stringMilliseconds, 10);\n    const date = new Date(milliseconds);\n    const minute = date.getMinutes();\n    const hour = date.getHours();\n    const day = date.getDate();\n    const month = date.getMonth() + 1;\n    const year = date.getFullYear();\n    const formattedDate = `${day}/${month}/${year} ${hour}:${minute}`;\n    return formattedDate;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chat-component\",\n    className: `${isOpen ? 'open' : 'closed'}`,\n    children: isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"chat-close-button\",\n        onClick: toggleChat,\n        children: /*#__PURE__*/_jsxDEV(BsX, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chat-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"chat-players\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"chat-players-item\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${uploads}/users/1698027263940.png`,\n              alt: 'user-1-photo',\n              className: \"chat-players-item-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"chat-players-item\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${uploads}/users/1698027243249.png`,\n              alt: 'user-1-photo',\n              className: \"chat-players-item-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"chat-players-item\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${uploads}/users/1698027263940.png`,\n              alt: 'user-1-photo',\n              className: \"chat-players-item-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"current-chat\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"current-chat-label\",\n            children: \"ZacZoubar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            id: \"chat-messages\",\n            ref: chatMessagesRef,\n            children: chatMessages && chatMessages[messageId] && Object.keys(chatMessages[messageId]).map((key, index, messageIds) => {\n              const currentMessage = chatMessages[messageId][key];\n              const isCurrentUserMessage = currentMessage.sender === userId;\n              const nextMessageKey = messageIds[index + 1];\n              const nextMessage = nextMessageKey ? chatMessages[messageId][nextMessageKey] : null;\n              const shouldAddBorderClass = !isCurrentUserMessage && nextMessage && nextMessage.sender !== userId;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: `chat-item ${isCurrentUserMessage ? 'current-user-message' : 'other-user-message'}\n        ${shouldAddBorderClass ? 'chat-item-border-bottom' : ''}`,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"chat-item-time-label\",\n                  children: getDateFromMilliseconds(key)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 9\n                }, this), currentMessage.message]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 7\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"message-input\",\n            value: newMessage || '',\n            placeholder: \"Digite aqui...\",\n            onChange: handleMessageChange,\n            onKeyDown: e => {\n              if (e.key === 'Enter') {\n                e.preventDefault(); // Prevent the default form submission\n                handleMessageSubmit(); // Call your submit function here\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"chat-button\",\n      onClick: toggleChat,\n      children: [/*#__PURE__*/_jsxDEV(BsChatDots, {\n        id: \"chat-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-unread-messages-count\",\n        children: unreadMessagesCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"RVRdPP9/6qbT146i9I4FaaFcJtw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","uploads","BsX","BsChatDots","useDispatch","useSelector","profile","jsxDEV","_jsxDEV","Chat","_s","dispatch","user","state","chatMessagesRef","socket","setSocket","isOpen","setIsOpen","unreadMessagesCount","setUnreadMessagesCount","chatMessages","setChatMessages","messageId","setMessageId","newMessage","setNewMessage","userId","setUserId","newSocket","withCredentials","disconnect","id","emit","on","messages","off","toggleChat","current","scrollTop","scrollHeight","console","log","handleMessageChange","e","target","value","handleMessageSubmit","userSend","targetUser","message","getDateFromMilliseconds","stringMilliseconds","milliseconds","parseInt","date","Date","minute","getMinutes","hour","getHours","day","getDate","month","getMonth","year","getFullYear","formattedDate","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","ref","Object","keys","map","key","index","messageIds","currentMessage","isCurrentUserMessage","sender","nextMessageKey","nextMessage","shouldAddBorderClass","type","placeholder","onChange","onKeyDown","preventDefault","_c","$RefreshReg$"],"sources":["C:/Users/empan/Desktop/CONTEUDO_DA_FACUL/Trabalho de conclusão de curso/Mate.gg/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport './Chat.css';\r\n\r\n//Chat server\r\nimport io from 'socket.io-client';\r\n\r\n//Uploads\r\nimport {uploads} from '../utils/config'\r\n\r\n//Icons\r\nimport { BsX, BsChatDots } from 'react-icons/bs'\r\n\r\n//Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { profile } from '../slices/userSlice';\r\n\r\nconst Chat = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const {user} = useSelector((state) => state.user);\r\n\r\n  const chatMessagesRef = useRef(null);\r\n\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [unreadMessagesCount, setUnreadMessagesCount] = useState(1);\r\n  const [chatMessages, setChatMessages] = useState({});\r\n  const [messageId, setMessageId] = useState(null)\r\n  const [newMessage, setNewMessage] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    profile();\r\n  }, [dispatch])\r\n  \r\n  //Create and set the socket variable, and sets the disconnection from socket when the component is dismounted\r\n  useEffect(() => {\r\n    const newSocket = io('http://localhost:4000', {\r\n      withCredentials: true,\r\n    });\r\n    setSocket(newSocket);\r\n\r\n    return () => { //Disconnect from server when Chat.js is dismounted\r\n      if (socket) {\r\n        socket.disconnect();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  //Set the userId variable when the store returns the user object\r\n  useEffect(() => {\r\n    if (user) {\r\n      setUserId(user.id);\r\n    }\r\n  }, [user]);\r\n\r\n  //Joins the client in the server when the socket and the userId are ready\r\n  useEffect(() => {\r\n    if (userId && socket) {\r\n      socket.emit('join', userId);\r\n    }\r\n  }, [userId, socket]);\r\n\r\n  //Emits the command to search for messages and sets the manipulator to when messages are received\r\n  useEffect(() => {\r\n    if (userId && socket) {\r\n      socket.emit('get-messages');\r\n      socket.on('messages', (messages) => {\r\n        setChatMessages(messages);\r\n      });\r\n    } \r\n\r\n    return () => { //Sets the manipulator off when the component gets dismounted\r\n      if (socket) {\r\n        socket.off('messages');\r\n\r\n      }\r\n    };\r\n  }, [userId, socket]);\r\n\r\n  //Toggle open/close chat\r\n  const toggleChat = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  //Scrolls the chat till the end when it opens\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\r\n    }\r\n  }, [isOpen]);\r\n\r\n  useEffect(() => {\r\n    setMessageId('-NfHe4i_uod67B0toAgQ')\r\n    console.log(\"Mensagens: \", chatMessages);\r\n    console.log(\"Mensagem : \", chatMessages[messageId])\r\n  }, [chatMessages])\r\n\r\n  //Handles a message submit from the message input\r\n  const handleMessageChange = (e) => {\r\n    setNewMessage(e.target.value);\r\n  };\r\n\r\n  //Handles a message submit from the message input\r\n  const handleMessageSubmit = (e) => {\r\n    if(socket && userId) {\r\n      const userSend = userId;\r\n      const targetUser = \"-NfHe4i_uod67B0toAgQ\";\r\n\r\n      socket.emit('send-message', { message: newMessage, targetUser: targetUser});\r\n\r\n      setNewMessage(null)\r\n    }\r\n  };\r\n\r\n  const getDateFromMilliseconds = (stringMilliseconds) => {\r\n    const milliseconds = parseInt(stringMilliseconds, 10);\r\n\r\n    const date = new Date(milliseconds);\r\n\r\n    const minute = date.getMinutes();\r\n    const hour = date.getHours();\r\n    const day = date.getDate();\r\n    const month = date.getMonth() + 1;\r\n    const year = date.getFullYear();\r\n\r\n    const formattedDate = `${day}/${month}/${year} ${hour}:${minute}`;\r\n\r\n    return formattedDate;\r\n  }\r\n\r\n  return (\r\n    <div id='chat-component' className={`${isOpen ? 'open' : 'closed'}`}>\r\n      {isOpen ? (\r\n        <div id=\"chat-window\">\r\n          <button id=\"chat-close-button\" onClick={toggleChat}>\r\n            <BsX/>\r\n          </button>\r\n          <div id='chat-list'>\r\n            <ul id='chat-players'>\r\n              <li className=\"chat-players-item\">\r\n                <img src={`${uploads}/users/1698027263940.png`} alt={'user-1-photo'} className=\"chat-players-item-image\" />\r\n              </li>\r\n              <li className=\"chat-players-item\">\r\n                <img src={`${uploads}/users/1698027243249.png`} alt={'user-1-photo'} className=\"chat-players-item-image\" />\r\n              </li>\r\n              <li className=\"chat-players-item\">\r\n                <img src={`${uploads}/users/1698027263940.png`} alt={'user-1-photo'} className=\"chat-players-item-image\" />\r\n              </li>\r\n            </ul>\r\n            <div id=\"current-chat\">\r\n              <div id='current-chat-label'>\r\n                ZacZoubar\r\n              </div>\r\n              <ul id=\"chat-messages\" ref={chatMessagesRef}>\r\n  {chatMessages && chatMessages[messageId] && Object.keys(chatMessages[messageId]).map((key, index, messageIds) => {\r\n    const currentMessage = chatMessages[messageId][key];\r\n    const isCurrentUserMessage = currentMessage.sender === userId;\r\n    const nextMessageKey = messageIds[index + 1];\r\n    const nextMessage = nextMessageKey ? chatMessages[messageId][nextMessageKey] : null;\r\n    const shouldAddBorderClass = !isCurrentUserMessage && nextMessage && nextMessage.sender !== userId;\r\n\r\n    return (\r\n      <li\r\n        key={key}\r\n        className={`chat-item ${isCurrentUserMessage ? 'current-user-message' : 'other-user-message'}\r\n        ${shouldAddBorderClass ? 'chat-item-border-bottom' : ''}`}\r\n      >\r\n        <p className='chat-item-time-label'>{getDateFromMilliseconds(key)}</p>\r\n        {currentMessage.message}\r\n      </li>\r\n    );\r\n  })}\r\n</ul>\r\n              <input\r\n                type=\"text\"\r\n                id='message-input'\r\n                value={newMessage || ''}\r\n                placeholder='Digite aqui...'\r\n                onChange={handleMessageChange}\r\n                onKeyDown={(e) => {\r\n                  if (e.key === 'Enter') {\r\n                    e.preventDefault(); // Prevent the default form submission\r\n                    handleMessageSubmit(); // Call your submit function here\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <button id=\"chat-button\" onClick={toggleChat}>\r\n          <BsChatDots id='chat-icon'/>\r\n          <div className='chat-unread-messages-count'>\r\n            {unreadMessagesCount}\r\n          </div>\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}