{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\empan\\\\Desktop\\\\CONTEUDO_DA_FACUL\\\\Trabalho de conclus\\xE3o de curso\\\\TCC\\\\frontend\\\\src\\\\pages\\\\Game\\\\GameRegister.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './GameRegister.css';\nimport { uploads } from '../../utils/config';\n\n//Hooks\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\n//Redux\nimport { getUserGames, profile, resetMessage, updateProfile } from '../../slices/userSlice';\n\n//Components\nimport Message from '../../components/Message';\n\n//Router\nimport { useParams } from 'react-router-dom';\nimport { getGames } from '../../slices/gameSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameRegister = () => {\n  _s();\n  //Get the game object from the url\n  const {\n    game\n  } = useParams();\n  const dispatch = useDispatch();\n\n  //Get the current user games and his games infos\n  const {\n    userGames,\n    loading,\n    error,\n    message\n  } = useSelector(state => state.user);\n  const {\n    games\n  } = useSelector(state => state.game);\n  const [userInfo, setUserInfo] = useState(null);\n  const [gameFields, setGameFields] = useState(null);\n  const [formData, setFormData] = useState({});\n\n  //Load user data for the game\n  useEffect(() => {\n    dispatch(getUserGames());\n    dispatch(getGames());\n  }, [dispatch]);\n\n  //Fill game info\n  useEffect(() => {\n    const gameInfo = userGames[game];\n    if (gameInfo) {\n      setUserInfo(gameInfo);\n    }\n  }, [game]);\n\n  //Fill user info with the game\n  useEffect(() => {\n    if (userGames && game) {\n      const gameInfo = userGames[game];\n      if (gameInfo) {\n        setUserInfo(gameInfo);\n      }\n    }\n  }, [userGames]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const userFormData = Object.keys(userInfo).forEach(key => formData.append(key, userInfo[key]));\n    formData.append(\"user\", userFormData);\n    await dispatch(updateProfile(formData));\n    setTimeout(() => {\n      dispatch(resetMessage());\n    }, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"edit-profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Perfil de jogo: \", game]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"subtitle\",\n      children: \"Informe os dados de sua conta de jogo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [Object.values(gameFields).map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: field.name,\n          children: [field.name, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), field.type === 'Integer' ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: field.name,\n          name: field.name,\n          value: formData[field.name] || '',\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: field.name,\n          name: field.name,\n          value: formData[field.name] || '',\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this)]\n      }, field.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Salvar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), !loading && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Salvar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 22\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        disabled: true,\n        value: \"Aguarde...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        msg: error,\n        type: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        msg: message,\n        type: \"success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(GameRegister, \"7ePKGawJVX7GqSD/iGYJdOfEneY=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector];\n});\n_c = GameRegister;\nexport default GameRegister;\nvar _c;\n$RefreshReg$(_c, \"GameRegister\");","map":{"version":3,"names":["React","uploads","useEffect","useState","useSelector","useDispatch","getUserGames","profile","resetMessage","updateProfile","Message","useParams","getGames","jsxDEV","_jsxDEV","GameRegister","_s","game","dispatch","userGames","loading","error","message","state","user","games","userInfo","setUserInfo","gameFields","setGameFields","formData","setFormData","gameInfo","handleChange","e","name","value","target","handleSubmit","preventDefault","userFormData","Object","keys","forEach","key","append","setTimeout","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","values","map","field","htmlFor","type","onChange","disabled","msg","_c","$RefreshReg$"],"sources":["C:/Users/empan/Desktop/CONTEUDO_DA_FACUL/Trabalho de conclusÃ£o de curso/TCC/frontend/src/pages/Game/GameRegister.js"],"sourcesContent":["import React from 'react';\r\nimport './GameRegister.css';\r\n\r\nimport {uploads} from '../../utils/config'\r\n\r\n//Hooks\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n//Redux\r\nimport { getUserGames, profile, resetMessage, updateProfile } from '../../slices/userSlice'\r\n\r\n//Components\r\nimport Message from '../../components/Message'\r\n\r\n//Router\r\nimport { useParams } from 'react-router-dom';\r\nimport { getGames } from '../../slices/gameSlice';\r\n\r\nconst GameRegister = () => {\r\n  //Get the game object from the url\r\n  const { game } = useParams();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  //Get the current user games and his games infos\r\n  const { userGames, loading, error, message } = useSelector((state) => state.user);\r\n  const { games } = useSelector((state) => state.game);\r\n\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [gameFields, setGameFields] = useState(null);\r\n\r\n  const [formData, setFormData] = useState({});\r\n\r\n  //Load user data for the game\r\n  useEffect(() => {\r\n    dispatch(getUserGames())\r\n    dispatch(getGames())\r\n  }, [dispatch]);\r\n\r\n  //Fill game info\r\n  useEffect(() => {\r\n    const gameInfo = userGames[game];\r\n    if(gameInfo) {\r\n      setUserInfo(gameInfo);\r\n    }\r\n  }, [game])\r\n\r\n  //Fill user info with the game\r\n  useEffect(() => {\r\n    if(userGames && game) {\r\n      const gameInfo = userGames[game];\r\n      if(gameInfo) {\r\n        setUserInfo(gameInfo);\r\n      }\r\n    }\r\n  }, [userGames])\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const userFormData = Object.keys(userInfo).forEach((key) =>\r\n      formData.append(key, userInfo[key])\r\n    );\r\n\r\n    formData.append(\"user\", userFormData);\r\n\r\n    await dispatch(updateProfile(formData));\r\n\r\n    setTimeout(() => {\r\n      dispatch(resetMessage());\r\n    }, 2000)\r\n  }\r\n\r\n  return (\r\n    <div id='edit-profile'>\r\n      <h2>Perfil de jogo: {game}</h2>\r\n      <p className='subtitle'>Informe os dados de sua conta de jogo</p>\r\n      <form onSubmit={handleSubmit}>\r\n        {Object.values(gameFields).map((field) => (\r\n          <div key={field.name}>\r\n            <label htmlFor={field.name}>{field.name}:</label>\r\n            {field.type === 'Integer' ? (\r\n              <input\r\n                type=\"number\"\r\n                id={field.name}\r\n                name={field.name}\r\n                value={formData[field.name] || ''}\r\n                onChange={handleChange}\r\n              />\r\n            ) : (\r\n              <input\r\n                type=\"text\"\r\n                id={field.name}\r\n                name={field.name}\r\n                value={formData[field.name] || ''}\r\n                onChange={handleChange}\r\n              />\r\n            )}\r\n          </div>\r\n        ))}\r\n        <button type=\"submit\">Salvar</button>\r\n        {!loading && <input type=\"submit\" value=\"Salvar\" />}\r\n        {loading && <input type=\"submit\" disabled value=\"Aguarde...\" />}\r\n        {error && <Message msg={error} type=\"error\" />}\r\n        {message && <Message msg={message} type=\"success\" />}\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GameRegister;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}