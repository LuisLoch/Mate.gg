{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport notificationService from \"../services/notificationService\";\nconst initialState = {\n  notifications: {},\n  error: false,\n  success: false,\n  loading: false,\n  message: null\n};\n\n//get user notifications\nexport const notifications = createAsyncThunk(\"notification/get\", async (id, thunkAPI) => {\n  const data = await notificationService.notifications(id);\n  return data;\n});\nexport const notificationSlice = createSlice({\n  name: \"notification\",\n  initialState,\n  extraReducers: builder => {\n    builder.addCase(profile.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(profile.fulfilled, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.error = null;\n      state.user = action.payload;\n    }).addCase(updateProfile.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(updateProfile.fulfilled, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.error = null;\n      state.user = action.payload;\n      state.message = \"Dados atualizados com sucesso!\";\n    }).addCase(updateProfile.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.user = {};\n    }).addCase(getUserDetails.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(getUserDetails.fulfilled, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.error = null;\n      state.user = action.payload;\n    });\n  }\n});\nexport const {\n  resetMessage\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","notificationService","initialState","notifications","error","success","loading","message","id","thunkAPI","data","notificationSlice","name","extraReducers","builder","addCase","profile","pending","state","fulfilled","action","user","payload","updateProfile","rejected","getUserDetails","resetMessage","userSlice","actions","reducer"],"sources":["C:/Users/empan/Desktop/CONTEUDO_DA_FACUL/Trabalho de conclusÃ£o de curso/TCC/frontend/src/slices/notificationSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport notificationService from \"../services/notificationService\";\r\n\r\nconst initialState = {\r\n  notifications: {},\r\n  error: false,\r\n  success: false,\r\n  loading: false,\r\n  message: null,\r\n};\r\n\r\n//get user notifications\r\nexport const notifications = createAsyncThunk(\r\n  \"notification/get\",\r\n  async (id, thunkAPI) => {\r\n    const data = await notificationService.notifications(id);\r\n\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const notificationSlice = createSlice({\r\n  name: \"notification\",\r\n  initialState,\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(profile.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(profile.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.success = true;\r\n        state.error = null;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(updateProfile.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(updateProfile.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.success = true;\r\n        state.error = null;\r\n        state.user = action.payload;\r\n        state.message = \"Dados atualizados com sucesso!\";\r\n      })\r\n      .addCase(updateProfile.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n        state.user = {};\r\n      })\r\n      .addCase(getUserDetails.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(getUserDetails.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.success = true;\r\n        state.error = null;\r\n        state.user = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { resetMessage } = userSlice.actions;\r\nexport default userSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,mBAAmB,MAAM,iCAAiC;AAEjE,MAAMC,YAAY,GAAG;EACnBC,aAAa,EAAE,CAAC,CAAC;EACjBC,KAAK,EAAE,KAAK;EACZC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;AACX,CAAC;;AAED;AACA,OAAO,MAAMJ,aAAa,GAAGH,gBAAgB,CAC3C,kBAAkB,EAClB,OAAOQ,EAAE,EAAEC,QAAQ,KAAK;EACtB,MAAMC,IAAI,GAAG,MAAMT,mBAAmB,CAACE,aAAa,CAACK,EAAE,CAAC;EAExD,OAAOE,IAAI;AACb,CACF,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAGZ,WAAW,CAAC;EAC3Ca,IAAI,EAAE,cAAc;EACpBV,YAAY;EACZW,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACC,OAAO,CAACC,OAAO,EAAGC,KAAK,IAAK;MACnCA,KAAK,CAACZ,OAAO,GAAG,IAAI;MACpBY,KAAK,CAACd,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDW,OAAO,CAACC,OAAO,CAACG,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC7CF,KAAK,CAACZ,OAAO,GAAG,KAAK;MACrBY,KAAK,CAACb,OAAO,GAAG,IAAI;MACpBa,KAAK,CAACd,KAAK,GAAG,IAAI;MAClBc,KAAK,CAACG,IAAI,GAAGD,MAAM,CAACE,OAAO;IAC7B,CAAC,CAAC,CACDP,OAAO,CAACQ,aAAa,CAACN,OAAO,EAAGC,KAAK,IAAK;MACzCA,KAAK,CAACZ,OAAO,GAAG,IAAI;MACpBY,KAAK,CAACd,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDW,OAAO,CAACQ,aAAa,CAACJ,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACnDF,KAAK,CAACZ,OAAO,GAAG,KAAK;MACrBY,KAAK,CAACb,OAAO,GAAG,IAAI;MACpBa,KAAK,CAACd,KAAK,GAAG,IAAI;MAClBc,KAAK,CAACG,IAAI,GAAGD,MAAM,CAACE,OAAO;MAC3BJ,KAAK,CAACX,OAAO,GAAG,gCAAgC;IAClD,CAAC,CAAC,CACDQ,OAAO,CAACQ,aAAa,CAACC,QAAQ,EAAE,CAACN,KAAK,EAAEE,MAAM,KAAK;MAClDF,KAAK,CAACZ,OAAO,GAAG,KAAK;MACrBY,KAAK,CAACd,KAAK,GAAGgB,MAAM,CAACE,OAAO;MAC5BJ,KAAK,CAACG,IAAI,GAAG,CAAC,CAAC;IACjB,CAAC,CAAC,CACDN,OAAO,CAACU,cAAc,CAACR,OAAO,EAAGC,KAAK,IAAK;MAC1CA,KAAK,CAACZ,OAAO,GAAG,IAAI;MACpBY,KAAK,CAACd,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDW,OAAO,CAACU,cAAc,CAACN,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACpDF,KAAK,CAACZ,OAAO,GAAG,KAAK;MACrBY,KAAK,CAACb,OAAO,GAAG,IAAI;MACpBa,KAAK,CAACd,KAAK,GAAG,IAAI;MAClBc,KAAK,CAACG,IAAI,GAAGD,MAAM,CAACE,OAAO;IAC7B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI;AAAa,CAAC,GAAGC,SAAS,CAACC,OAAO;AACjD,eAAeD,SAAS,CAACE,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}